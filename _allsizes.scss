@mixin generate-margins-and-paddings() {
	$currentSpacing: 0;

	@while $currentSpacing < ($spacingMax+1) {
		@include all-sizes-queue(marg-#{$currentSpacing},   (margin: #{$currentSpacing}px));
		@include all-sizes-queue(marg-t-#{$currentSpacing}, (margin-top: #{$currentSpacing}px));
		@include all-sizes-queue(marg-b-#{$currentSpacing}, (margin-bottom: #{$currentSpacing}px));
		@include all-sizes-queue(marg-l-#{$currentSpacing}, (margin-left: #{$currentSpacing}px));
		@include all-sizes-queue(marg-r-#{$currentSpacing}, (margin-right: #{$currentSpacing}px));

		@include all-sizes-queue(pad-#{$currentSpacing},   (padding: #{$currentSpacing}px));
		@include all-sizes-queue(pad-t-#{$currentSpacing}, (padding-top: #{$currentSpacing}px));
		@include all-sizes-queue(pad-b-#{$currentSpacing}, (padding-bottom: #{$currentSpacing}px));
		@include all-sizes-queue(pad-l-#{$currentSpacing}, (padding-left: #{$currentSpacing}px));
		@include all-sizes-queue(pad-r-#{$currentSpacing}, (padding-right: #{$currentSpacing}px));

		$currentSpacing: $currentSpacing + $spacingMultiplier;
	}
}

@include all-sizes-queue(float-left, (float: left));
@include all-sizes-queue(float-right, (float: right));
@include all-sizes-queue(display-none, (display: none));

@include generate-margins-and-paddings();
@include generate-all-sizes-queue();