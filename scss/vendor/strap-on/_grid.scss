html {
	@each $breakpoint, $size in $breakpoints {
		@include and-up($breakpoint) {
			font-family: $breakpoint+':'+(nth($size, 1));
		}
	}
}

.container {
	@each $breakpoint, $size in $breakpoints {
		@include and-up($breakpoint) {
			width: nth($size, 2);
		}
	}

	padding-left: #{$defaultGutterSize}px; 
	padding-right: #{$defaultGutterSize}px;
}

.row {
	@include clearfix;
	display: block;
	margin-left: -#{$defaultGutterSize}px; 
	margin-right: -#{$defaultGutterSize}px;
}

[class^="col-"] {
	display: block;
	float: left;
	width: 100%;
	padding-left: #{$defaultGutterSize}px; 
	padding-right: #{$defaultGutterSize}px;
}

//gutters
@each $size in $gutterSizes {
	@include all-sizes(gutter-#{$size}){
		padding-left: #{$size}px; 
		padding-right: #{$size}px;

		& > .row { margin-left: -#{$size}px; margin-right: -#{$size}px; }
	}
}

//columns
@for $index from 1 through $defaultRowColNum {
	$percentage: (100%/$defaultRowColNum)*($index);
	$string: 'row > .col-';
	@include all-sizes-queue(#{$string}#{$index}, (width: #{$percentage}));
}

@each $numCols in $rowCols {
	@for $index from 1 through $numCols {
		$percentage: (100%/$numCols)*($index);
		$stringBeginning: 'row.cols-';
		$stringMiddle: '> .col-';
		@include all-sizes-queue(#{$stringBeginning}#{$numCols}#{$stringMiddle}#{$index}, (width: #{$percentage}));
	}
}

@include generate-all-sizes-queue();